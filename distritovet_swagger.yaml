openapi: 3.0.3
info:
  title: Odoo Customer API
  description: API para gestionar clientes en Odoo (Distrito Vet)
  version: 1.0.0
servers:
  - url: http://your_odoo_server
    description: Servidor principal de Odoo
paths:
  /api/customer/get:
    get:
      summary: Obtener un cliente por ID
      description: Devuelve la información de un cliente específico de la empresa con company_id = 3.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
          description: ID del cliente a consultar
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el parámetro ID o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Cliente no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/customers_list:
    get:
      summary: Listar clientes paginados
      description: Retorna un listado paginado de clientes de la empresa con company_id = 2.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/customer/post:
    post:
      summary: Crear un nuevo cliente
      description: Crea un cliente en Odoo para la empresa con company_id = 3.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '200':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  userCreated:
                    $ref: '#/components/schemas/NewCustomerResponse'
        '400':
          description: Faltan campos obligatorios o error en la creación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/customer/patch:
    put:
      summary: Actualizar un cliente existente
      description: Actualiza un cliente en Odoo con los datos proporcionados (company_id = 3).
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomerRequest'
      responses:
        '200':
          description: Cliente actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  message:
                    type: string
                  updatedCustomer:
                    $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el campo ID o no se enviaron campos válidos
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/customer_search:
    get:
      summary: Buscar clientes por nombre, email o teléfono
      description: Busca clientes en la empresa con company_id = 3 según un texto de búsqueda.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre, email o teléfono)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Falta el parámetro de búsqueda o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        street:
          type: string
          nullable: true
        street_name:
          type: string
          nullable: true
        street_number:
          type: string
          nullable: true
        colony:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
        email:
          type: string
          nullable: true
        rfc:
          type: string
          nullable: true
        license_operator_id:
          type: string
          nullable: true
        usage_id:
          type: string
          nullable: true
        payment_method_id:
          type: string
          nullable: true
        curp:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        seller_id:
          type: string
          nullable: true
        company_id:
          type: integer
        company_name:
          type: string
      required:
        - id
        - name
        - company_id
    PaginatedCustomers:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - customers
    CreateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        display_name:
          type: string
        street:
          type: string
        street_name:
          type: string
        street_number:
          type: string
        colony:
          type: string
        city:
          type: string
        state:
          type: integer
        zip:
          type: string
        country:
          type: integer
        rfc:
          type: string
        license_operator_id:
          type: string
        usage_id:
          type: string
        payment_method_id:
          type: integer
        curp:
          type: string
        category:
          type: integer
        seller_id:
          type: integer
      required:
        - name
        - email
        - phone
    NewCustomerResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - email
        - phone
    UpdateCustomerRequest:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        street:
          type: string
        street_name:
          type: string
        street_number:
          type: string
        colony:
          type: string
        city:
          type: string
        state:
          type: integer
        zip:
          type: string
        country:
          type: integer
        phone:
          type: string
        email:
          type: string
        rfc:
          type: string
        license_operator_id:
          type: string
        usage_id:
          type: string
        payment_method_id:
          type: integer
        curp:
          type: string
        category:
          type: integer
        seller_id:
          type: integer
        company_id:
          type: integer
      required:
        - id
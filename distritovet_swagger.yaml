```yaml
openapi: 3.0.0
info:
  title: Odoo Customer, Products, and Sales Orders API
  description: API para gestionar clientes, productos, órdenes de venta y facturas en Odoo (Distrito Vet). Los endpoints están organizados en grupos principales **Customer**, **Products**, **Sales Orders**, **Sellers** y **Invoices**. Otros módulos pueden tener sus propios grupos de endpoints.
  version: 1.0.0
servers:
  - url: http://your_odoo_server
    description: Servidor principal de Odoo
tags:
  - name: Customer
    description: Operaciones relacionadas con la gestión de clientes en Odoo (Distrito Vet)
  - name: Products
    description: Operaciones relacionadas con la gestión de productos en Odoo (Distrito Vet)
  - name: Sales Orders
    description: Operaciones relacionadas con la gestión de órdenes de venta en Odoo (Distrito Vet)
  - name: Sellers
    description: Operaciones relacionadas con la gestión de vendedores en Odoo (Distrito Vet)
  - name: Invoices
    description: Operaciones relacionadas con la gestión de facturas en Odoo (Distrito Vet)
  - name: Geo Data
    description: Operaciones relacionadas con países, estados, ciudades y localidades
paths:
  /api/customer/get:
    get:
      tags:
        - Customer
      summary: Obtener un cliente por ID
      description: Devuelve la información de un cliente específico de la empresa con company_id = 3.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
          description: ID del cliente a consultar
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el parámetro ID o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Cliente no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/customers_list:
    get:
      tags:
        - Customer
      summary: Listar clientes paginados
      description: Retorna un listado paginado de clientes de la empresa con company_id = 3.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/customer/post:
    post:
      tags:
        - Customer
      summary: Crear un nuevo cliente
      description: Crea un cliente en Odoo para la empresa con company_id = 3.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '200':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  userCreated:
                    $ref: '#/components/schemas/NewCustomerResponse'
        '400':
          description: Faltan campos obligatorios o error en la creación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/customer/patch:
    put:
      tags:
        - Customer
      summary: Actualizar un cliente existente
      description: Actualiza un cliente en Odoo con los datos proporcionados (company_id = 3). El cuerpo de la solicitud debe estar en formato JSON-RPC.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonRpcUpdateCustomerRequest'
      responses:
        '200':
          description: Cliente actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [success]
                      message:
                        type: string
                      updatedCustomer:
                        $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el campo ID, no se enviaron campos válidos o formato JSON-RPC inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [error]
                      message:
                        type: string
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [error]
                      message:
                        type: string
  /api/customer/post_secondary:
    get:
      tags:
        - Customer
      summary: Crear un cliente con dirección secundaria
      description: Crea un cliente en Odoo (empresa con company_id = 3) y opcionalmente agrega una dirección secundaria asociada.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                rfc:
                  type: string
                curp:
                  type: string
                license_operator_id:
                  type: string
                usage_id:
                  type: string
                payment_method_id:
                  type: integer
                street:
                  type: string
                zip:
                  type: string
                city:
                  type: string
                state:
                  type: integer
                country:
                  type: integer
                category:
                  type: integer
                seller_id:
                  type: integer
                contact_name:
                  type: string
                contact_street:
                  type: string
                contact_zip:
                  type: string
                contact_city:
                  type: string
                contact_state:
                  type: integer
                contact_country:
                  type: integer
                contact_phone:
                  type: string
                contact_email:
                  type: string
                contact_type:
                  type: string
              required:
                - name
                - email
                - phone
      responses:
        '200':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  userCreated:
                    $ref: '#/components/schemas/NewCustomerResponse'
        '400':
          description: Faltan campos obligatorios o error de validación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
        '500':
          description: Error interno en la creación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/customer_search:
    get:
      tags:
        - Customer
      summary: Buscar clientes por nombre, email o teléfono
      description: Busca clientes en la empresa con company_id = 3 según un texto de búsqueda.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre, email o teléfono)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Falta el parámetro de búsqueda o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/customer/email_exists:
    get:
      tags:
        - Customer
      summary: Verificar si existe un cliente por email
      description: Verifica si un cliente con el email proporcionado existe en la empresa con company_id = 3.
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: Email del cliente a verificar
      responses:
        '200':
          description: Resultado de la verificación
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    description: Indica si el email ya está registrado
        '400':
          description: Falta el parámetro email
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/products/get:
    get:
      tags:
        - Products
      summary: Obtener un producto por ID
      description: Devuelve la información de un producto específico de la empresa con company_id = 3.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
          description: ID del producto a consultar
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Falta el parámetro ID o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Producto no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/products_list:
    get:
      tags:
        - Products
      summary: Listar productos paginados
      description: Retorna un listado paginado de productos de la empresa con company_id = 3.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de productos paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/products_search:
    get:
      tags:
        - Products
      summary: Buscar productos por nombre o código
      description: Busca productos en la empresa con company_id = 3 según un texto de búsqueda, y opcionalmente filtra por categorías y marcas.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre o código del producto)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
        - name: category_ids
          in: query
          required: false
          schema:
            type: string
          description: "Lista de IDs de categorías separada por comas ejemplo: '1,2,3'"
        - name: brand_ids
          in: query
          required: false
          schema:
            type: string
          description: "Lista de IDs de marcas separada por comas ejemplo: 4,5,6"
      responses:
        '200':
          description: Lista de productos encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        '400':
          description: Falta el parámetro de búsqueda o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/products_new:
    get:
      tags:
        - Products
      summary: Obtener productos nuevos
      description: Devuelve una lista de productos creados en los últimos 60 días para la empresa con company_id = 3.
      responses:
        '200':
          description: Lista de productos nuevos
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
  /api/products_top:
    get:
      tags:
        - Products
      summary: Obtener los 20 productos más vendidos
      description: Devuelve una lista de los 20 productos más vendidos para la empresa con company_id = 3.
      responses:
        '200':
          description: Lista de productos más vendidos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/orders_by_user:
    get:
      tags:
        - Sales Orders
      summary: Obtener órdenes de venta por cliente
      description: Retorna un listado paginado de órdenes de venta para un cliente específico en la empresa con company_id = 3.
      parameters:
        - name: customer_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del cliente
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de órdenes paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrders'
        '400':
          description: Falta el parámetro customer_id o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/order_get:
    get:
      tags:
        - Sales Orders
      summary: Obtener una orden de venta por ID
      description: Devuelve la información de una orden de venta específica de la empresa con company_id = 3.
      parameters:
        - name: order_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de la orden a consultar
      responses:
        '200':
          description: Orden encontrada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaleOrder'
        '400':
          description: Falta el parámetro order_id o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Orden no encontrada
          content:
            text/plain:
              schema:
                type: string
  /api/order_lines_get:
    get:
      tags:
        - Sales Orders
      summary: Obtener las líneas de una orden de venta por ID
      description: Devuelve las líneas de una orden de venta específica de la empresa con company_id = 3.
      parameters:
        - name: order_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de la orden a consultar
      responses:
        '200':
          description: Líneas de la orden encontradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  order_lines:
                    type: array
                    items:
                      $ref: '#/components/schemas/SaleOrderLine'
        '400':
          description: Falta el parámetro order_id o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: No se encontraron líneas para la orden
          content:
            text/plain:
              schema:
                type: string
  /api/order/get:
    get:
      tags:
        - Sales Orders
      summary: Listar órdenes de venta paginadas
      description: Retorna un listado paginado de órdenes de venta de la empresa con company_id = 3.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de órdenes paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrders'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/order/post:
    post:
      tags:
        - Sales Orders
      summary: Crear una nueva orden de venta
      description: Crea una orden de venta en Odoo para la empresa con company_id = 3.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '200':
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  order_id:
                    type: integer
                  order_name:
                    type: string
        '400':
          description: Faltan campos obligatorios o error en la creación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/order/search:
    get:
      tags:
        - Sales Orders
      summary: Buscar órdenes de venta por nombre o cliente
      description: Busca órdenes de venta en la empresa con company_id = 3 según un texto de búsqueda (en nombre de la orden o nombre del cliente).
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre de la orden o nombre del cliente)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de órdenes encontradas
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrders'
        '400':
          description: Falta el parámetro de búsqueda o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/sellers:
    get:
      tags:
        - Sellers
      summary: Listar vendedores paginados
      description: Retorna un listado paginado de vendedores de la empresa con company_id = 3 y crm_team_id = 12.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de vendedores paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSellers'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/sellerbyid:
    get:
      tags:
        - Sellers
      summary: Obtener un vendedor por ID
      description: Devuelve la información de un vendedor específico de la empresa con company_id = 3.
      parameters:
        - name: seller_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del vendedor a consultar
      responses:
        '200':
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '400':
          description: Falta el parámetro seller_id o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Vendedor no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/seller/by_email:
    get:
      tags:
        - Sellers
      summary: Obtener un vendedor por email
      description: Devuelve la información de un vendedor específico de la empresa con company_id = 3, usando su email como parámetro de búsqueda.
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: Email del vendedor a consultar
      responses:
        '200':
          description: Vendedor encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Seller'
        '400':
          description: Falta el parámetro email
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Vendedor no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/invoices:
    get:
      tags:
        - Invoices
      summary: Listar facturas paginadas
      description: Retorna un listado paginado de facturas de la empresa con company_id = 3, con estado 'posted' y tipo 'out_invoice'. Permite ordenar por un campo específico.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
        - name: orderBy
          in: query
          required: false
          schema:
            type: string
            default: invoice_date
          description: Campo por el cual ordenar (por ejemplo, 'invoice_date', 'name')
        - name: ASC
          in: query
          required: false
          schema:
            type: string
            default: "true"
            enum: ["true", "false"]
          description: Orden ascendente ('true') o descendente ('false')
      responses:
        '200':
          description: Lista de facturas paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoices'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/invoice_by_user:
    get:
      tags:
        - Invoices
      summary: Obtener facturas por cliente
      description: Retorna un listado paginado de facturas para un cliente específico en la empresa con company_id = 3, con estado 'posted' y tipo 'out_invoice'.
      parameters:
        - name: customer_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del cliente
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de facturas paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedInvoices'
        '400':
          description: Falta el parámetro customer_id o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/invoice_line:
    get:
      tags:
        - Invoices
      summary: Obtener las líneas de una factura por ID
      description: Devuelve las líneas de una factura específica de la empresa con company_id = 3.
      parameters:
        - name: invoice_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de la factura a consultar
      responses:
        '200':
          description: Líneas de la factura encontradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  invoice_lines:
                    type: array
                    items:
                      $ref: '#/components/schemas/InvoiceLine'
        '400':
          description: Falta el parámetro invoice_id o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: No se encontraron líneas para la factura
          content:
            text/plain:
              schema:
                type: string
  /api/countries:
    get:
      tags:
        - Geo Data
      summary: Listar países
      description: Devuelve una lista de todos los países disponibles en Odoo.
      responses:
        '200':
          description: Lista de países
          content:
            application/json:
              schema:
                type: object
                properties:
                  countries:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code_country:
                          type: string
                      required:
                        - id
                        - name
                        - code_country
  /api/country_id:
    get:
      tags:
        - Geo Data
      summary: Obtener país por ID
      description: Devuelve la información de un país a partir de su ID.
      parameters:
        - name: country_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del país a consultar
      responses:
        '200':
          description: Información del país
          content:
            application/json:
              schema:
                type: object
                properties:
                  country:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      code_country:
                        type: string
                    required:
                      - id
                      - name
                      - code_country
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: País no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/state_by_country:
    get:
      tags:
        - Geo Data
      summary: Listar estados por país
      description: Devuelve los estados asociados a un país específico.
      parameters:
        - name: country_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del país para filtrar los estados
      responses:
        '200':
          description: Lista de estados
          content:
            application/json:
              schema:
                type: object
                properties:
                  states:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        code_country:
                          type: string
                      required:
                        - id
                        - name
                        - code_country
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Estados no encontrados
          content:
            text/plain:
              schema:
                type: string
  /api/state_id:
    get:
      tags:
        - Geo Data
      summary: Obtener estado por ID
      description: Devuelve la información de un estado a partir de su ID.
      parameters:
        - name: state_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del estado a consultar
      responses:
        '200':
          description: Información del estado
          content:
            application/json:
              schema:
                type: object
                properties:
                  state:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      code_country:
                        type: string
                    required:
                      - id
                      - name
                      - code_country
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Estado no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/cities_by_state:
    get:
      tags:
        - Geo Data
      summary: Listar ciudades por estado
      description: Devuelve las ciudades asociadas a un estado específico.
      parameters:
        - name: state_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del estado para filtrar las ciudades
      responses:
        '200':
          description: Lista de ciudades
          content:
            application/json:
              schema:
                type: object
                properties:
                  cities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        state_id:
                          type: integer
                        state_name:
                          type: string
                      required:
                        - id
                        - name
                        - state_id
                        - state_name
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Ciudades no encontradas
          content:
            text/plain:
              schema:
                type: string
  /api/city_id:
    get:
      tags:
        - Geo Data
      summary: Obtener ciudad por ID
      description: Devuelve la información de una ciudad específica.
      parameters:
        - name: city_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de la ciudad a consultar
      responses:
        '200':
          description: Información de la ciudad
          content:
            application/json:
              schema:
                type: object
                properties:
                  city:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      state_id:
                        type: integer
                      state_name:
                        type: string
                    required:
                      - id
                      - name
                      - state_id
                      - state_name
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Ciudad no encontrada
          content:
            text/plain:
              schema:
                type: string
  /api/localities_by_state:
    get:
      tags:
        - Geo Data
      summary: Listar localidades por estado
      description: Devuelve las localidades asociadas a un estado específico.
      parameters:
        - name: state_id
          in: query
          required: true
          schema:
            type: integer
          description: ID del estado para filtrar las localidades
      responses:
        '200':
          description: Lista de localidades
          content:
            application/json:
              schema:
                type: object
                properties:
                  localities:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        state_id:
                          type: integer
                        state_name:
                          type: string
                      required:
                        - id
                        - name
                        - state_id
                        - state_name
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Localidades no encontradas
          content:
            text/plain:
              schema:
                type: string
  /api/locality_id:
    get:
      tags:
        - Geo Data
      summary: Obtener localidad por ID
      description: Devuelve la información de una localidad específica.
      parameters:
        - name: locality_id
          in: query
          required: true
          schema:
            type: integer
          description: ID de la localidad a consultar
      responses:
        '200':
          description: Información de la localidad
          content:
            application/json:
              schema:
                type: object
                properties:
                  locality:
                    type: object
                    properties:
                      id:
                        type: integer
                      name:
                        type: string
                      state_id:
                        type: integer
                      state_name:
                        type: string
                    required:
                      - id
                      - name
                      - state_id
                      - state_name
        '400':
          description: Parámetro faltante o inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Localidad no encontrada
          content:
            text/plain:
              schema:
                type: string
components:
  schemas:
    Customer:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        street:
          type: string
          nullable: true
        street_name:
          type: string
          nullable: true
        street_number:
          type: string
          nullable: true
        colony:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        phone:
          type: string
        email:
          type: string
          nullable: true
        rfc:
          type: string
          nullable: true
        license_operator_id:
          type: string
          nullable: true
        usage_id:
          type: string
          nullable: true
        payment_method_id:
          type: string
          nullable: true
        curp:
          type: string
          nullable: true
        category:
          type: string
          nullable: true
        seller_id:
          type: string
          nullable: true
        company_id:
          type: integer
        company_name:
          type: string
      required:
        - id
        - name
        - company_id
    PaginatedCustomers:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        customers:
          type: array
          items:
            $ref: '#/components/schemas/Customer'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - customers
    CreateCustomerRequest:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        phone:
          type: string
        display_name:
          type: string
        street:
          type: string
        street_name:
          type: string
        street_number:
          type: string
        colony:
          type: string
        city:
          type: string
        state:
          type: integer
        zip:
          type: string
        country:
          type: integer
        rfc:
          type: string
        license_operator_id:
          type: string
        usage_id:
          type: string
        payment_method_id:
          type: integer
        curp:
          type: string
        category:
          type: integer
        seller_id:
          type: integer
      required:
        - name
        - email
        - phone
    NewCustomerResponse:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
        phone:
          type: string
      required:
        - id
        - name
        - email
        - phone
    JsonRpcUpdateCustomerRequest:
      type: object
      properties:
        jsonrpc:
          type: string
          enum: ["2.0"]
        id:
          type: integer
          nullable: true
        params:
          type: object
          properties:
            id:
              type: integer
            name:
              type: string
            display_name:
              type: string
            street:
              type: string
            street_name:
              type: string
            street_number:
              type: string
            colony:
              type: string
            city:
              type: string
            state:
              type: integer
            zip:
              type: string
            country:
              type: integer
            phone:
              type: string
            email:
              type: string
            rfc:
              type: string
            license_operator_id:
              type: string
            usage_id:
              type: string
            payment_method_id:
              type: integer
            curp:
              type: string
            category:
              type: integer
            seller_id:
              type: integer
            company_id:
              type: integer
          required:
            - id
      required:
        - jsonrpc
        - params
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        display_name:
          type: string
        description:
          type: string
          nullable: true
        default_code:
          type: string
          nullable: true
        active:
          type: boolean
        list_price:
          type: number
        taxes_string:
          type: string
          nullable: true
        quantity_available:
          type: number
        quantity_virtual_available:
          type: number
        uom_name:
          type: string
          nullable: true
        sales_count:
          type: integer
        tax_ids:
          type: array
          items:
            type: integer
        service_type:
          type: string
          nullable: true
        detailed_type:
          type: string
          nullable: true
        type:
          type: string
          nullable: true
        company_id:
          type: integer
        invoice_policy:
          type: string
          nullable: true
        service_policy:
          type: string
          nullable: true
        product_category_id:
          type: string
          nullable: true
        product_line_id:
          type: string
          nullable: true
        product_brand_id:
          type: string
          nullable: true
        currency_id:
          type: string
          nullable: true
        sat_key_id:
          type: integer
          nullable: true
      required:
        - id
        - name
        - active
        - list_price
        - quantity_available
        - quantity_virtual_available
        - sales_count
        - company_id
    PaginatedProducts:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        products:
          type: array
          items:
            $ref: '#/components/schemas/Product'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - products
    SaleOrder:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        order_date:
          type: string
          format: date-time
        delivery_status:
          type: string
          nullable: true
        warehouse_id:
          type: integer
          nullable: true
        invoice_status:
          type: string
          nullable: true
        seller_id:
          type: integer
          nullable: true
        tax_total:
          type: object
          nullable: true
        order_line_ids:
          type: array
          items:
            type: integer
        payment_term_id:
          type: integer
          nullable: true
        tax_country_id:
          type: integer
          nullable: true
        currency_id:
          type: integer
          nullable: true
        price_list_id:
          type: integer
          nullable: true
        allowed_pricelist_ids:
          type: array
          items:
            type: integer
        customer_shipping_id:
          type: integer
          nullable: true
        customer_invoice_id:
          type: integer
          nullable: true
        customer_id:
          type: integer
      required:
        - id
        - name
        - order_date
        - customer_id
    PaginatedOrders:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        orders:
          type: array
          items:
            $ref: '#/components/schemas/SaleOrder'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - orders
    SaleOrderLine:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        product_id:
          type: integer
          nullable: true
        product_template_id:
          type: integer
          nullable: true
        product_quantity:
          type: number
        product_quantity_delivered:
          type: number
        product_quantity_invoiced:
          type: number
        product_quantity_to_deliver:
          type: number
        product_quantity_to_invoice:
          type: number
        unity_of_measurement_id:
          type: integer
          nullable: true
        product_type:
          type: string
          nullable: true
        warehouse_id:
          type: integer
          nullable: true
        move_ids:
          type: array
          items:
            type: integer
        quantity_delivered_method:
          type: string
          nullable: true
        price_unit:
          type: number
        price_subtotal:
          type: number
        tax_id:
          type: array
          items:
            type: integer
        discount:
          type: number
          nullable: true
        state:
          type: string
          nullable: true
        invoice_status:
          type: string
          nullable: true
        currency_id:
          type: integer
          nullable: true
        price_tax:
          type: number
          nullable: true
      required:
        - id
        - name
        - product_quantity
        - price_unit
        - price_subtotal
    CreateOrderRequest:
      type: object
      properties:
        partner_id:
          type: integer
          description: ID del cliente
        partner_shipping_id:
          type: integer
          description: ID de la dirección de envío
        order_line:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
                description: ID del producto
              product_quantity:
                type: number
                description: Cantidad del producto
            required:
              - product_id
              - product_quantity
      required:
        - partner_id
        - partner_shipping_id
        - order_line
    Seller:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
          nullable: true
        phone:
          type: string
          nullable: true
        company_id:
          type: integer
      required:
        - id
        - name
        - company_id
    PaginatedSellers:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        sellers:
          type: array
          items:
            $ref: '#/components/schemas/Seller'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - sellers
    Invoice:
      type: object
      properties:
        id:
          type: integer
        display_name:
          type: string
        name:
          type: string
        order_id:
          type: integer
          nullable: true
        seller_id:
          type: integer
          nullable: true
        customer_id:
          type: integer
        customer_shipping_id:
          type: integer
          nullable: true
        payment_state:
          type: string
        move_type:
          type: string
        invoice_lines_ids:
          type: array
          items:
            type: integer
        amount_residual:
          type: number
        amount_total:
          type: number
        tax_totals:
          type: object
          nullable: true
        sat_status:
          type: string
          nullable: true
        payment_term_id:
          type: integer
          nullable: true
        payment_reference:
          type: string
          nullable: true
        invoice_date:
          type: string
          format: date
        tax_country_id:
          type: integer
          nullable: true
        journal_id:
          type: integer
        currency_id:
          type: integer
      required:
        - id
        - name
        - customer_id
        - move_type
        - amount_residual
        - amount_total
        - invoice_date
        - journal_id
        - currency_id
    PaginatedInvoices:
      type: object
      properties:
        totalItems:
          type: integer
        itemsPerPage:
          type: integer
        page:
          type: integer
        totalPages:
          type: integer
        nextPage:
          type: integer
          nullable: true
        previousPage:
          type: integer
          nullable: true
        invoices:
          type: array
          items:
            $ref: '#/components/schemas/Invoice'
      required:
        - totalItems
        - itemsPerPage
        - page
        - totalPages
        - invoices
    InvoiceLine:
      type: object
      properties:
        id:
          type: integer
        product_id:
          type: integer
          nullable: true
        product_name:
          type: string
          nullable: true
        quantity:
          type: number
        price_unit:
          type: number
        discount:
          type: number
          nullable: true
        price_subtotal:
          type: number
        tax_ids:
          type: array
          items:
            type: integer
        account_id:
          type: integer
        sale_line_id:
          type: integer
          nullable: true
      required:
        - id
        - quantity
        - price_unit
        - price_subtotal
        - account_id
```
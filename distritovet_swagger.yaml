openapi: 3.0.3
info:
  title: Odoo Customer and Products API
  description: API para gestionar clientes y productos en Odoo (Distrito Vet). Los endpoints están organizados en dos grupos principales **Customer** y **Products**. Otros módulos pueden tener sus propios grupos de endpoints.
  version: 1.0.0
servers:
  - url: http://your_odoo_server
    description: Servidor principal de Odoo
tags:
  - name: Customer
    description: Operaciones relacionadas con la gestión de clientes en Odoo (Distrito Vet)
  - name: Products
    description: Operaciones relacionadas con la gestión de productos en Odoo (Distrito Vet)
paths:
  /api/customer/get:
    get:
      tags:
        - Customer
      summary: Obtener un cliente por ID
      description: Devuelve la información de un cliente específico de la empresa con company_id = 3.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
          description: ID del cliente a consultar
      responses:
        '200':
          description: Cliente encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el parámetro ID o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Cliente no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/customers_list:
    get:
      tags:
        - Customer
      summary: Listar clientes paginados
      description: Retorna un listado paginado de clientes de la empresa con company_id = 3.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/customer/post:
    post:
      tags:
        - Customer
      summary: Crear un nuevo cliente
      description: Crea un cliente en Odoo para la empresa con company_id = 3.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomerRequest'
      responses:
        '200':
          description: Cliente creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [success]
                  userCreated:
                    $ref: '#/components/schemas/NewCustomerResponse'
        '400':
          description: Faltan campos obligatorios o error en la creación
          content:
            application/json:
              schema:
                type: object
                properties:
                  result:
                    type: string
                    enum: [error]
                  message:
                    type: string
  /api/customer/patch:
    put:
      tags:
        - Customer
      summary: Actualizar un cliente existente
      description: Actualiza un cliente en Odoo con los datos proporcionados (company_id = 3). El cuerpo de la solicitud debe estar en formato JSON-RPC.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JsonRpcUpdateCustomerRequest'
      responses:
        '200':
          description: Cliente actualizado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [success]
                      message:
                        type: string
                      updatedCustomer:
                        $ref: '#/components/schemas/Customer'
        '400':
          description: Falta el campo ID, no se enviaron campos válidos o formato JSON-RPC inválido
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [error]
                      message:
                        type: string
        '404':
          description: Cliente no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  jsonrpc:
                    type: string
                    enum: ["2.0"]
                  id:
                    type: integer
                    nullable: true
                  result:
                    type: object
                    properties:
                      result:
                        type: string
                        enum: [error]
                      message:
                        type: string
  /api/customer_search:
    get:
      tags:
        - Customer
      summary: Buscar clientes por nombre, email o teléfono
      description: Busca clientes en la empresa con company_id = 3 según un texto de búsqueda.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre, email o teléfono)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de clientes encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomers'
        '400':
          description: Falta el parámetro de búsqueda o parámetros inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/customer/email_exists:
    get:
      tags:
        - Customer
      summary: Verificar si existe un cliente por email
      description: Verifica si un cliente con el email proporcionado existe en la empresa con company_id = 3.
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
          description: Email del cliente a verificar
      responses:
        '200':
          description: Resultado de la verificación
          content:
            application/json:
              schema:
                type: object
                properties:
                  exists:
                    type: boolean
                    description: Indica si el email ya está registrado
        '400':
          description: Falta el parámetro email
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /api/products/get:
    get:
      tags:
        - Products
      summary: Obtener un producto por ID
      description: Devuelve la información de un producto específico de la empresa con company_id = 3.
      parameters:
        - name: id
          in: query
          required: true
          schema:
            type: integer
          description: ID del producto a consultar
      responses:
        '200':
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Falta el parámetro ID o ID inválido
          content:
            text/plain:
              schema:
                type: string
        '404':
          description: Producto no encontrado
          content:
            text/plain:
              schema:
                type: string
  /api/products_list:
    get:
      tags:
        - Products
      summary: Listar productos paginados
      description: Retorna un listado paginado de productos de la empresa con company_id = 3.
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
      responses:
        '200':
          description: Lista de productos paginada
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProducts'
        '400':
          description: Parámetros de paginación inválidos
          content:
            text/plain:
              schema:
                type: string
  /api/products_search:
    get:
      tags:
        - Products
      summary: Buscar productos por nombre o código
      description: Busca productos en la empresa con company_id = 3 según un texto de búsqueda, y opcionalmente filtra por categorías y marcas.
      parameters:
        - name: search
          in: query
          required: true
          schema:
            type: string
          description: Texto para buscar (en nombre o código del producto)
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Número de página
        - name: itemsPerPage
          in: query
          required: false
          schema:
            type: integer
            default: 10
          description: Cantidad de elementos por página
        - name: category_ids
          in: query
          required: false
          schema:
            type: string
          description: Lista de IDs de categorías separada por comas (ejemplo: "1,2,3")
        - name: brand_ids
          in: query
          required: false
          schema:
            type: string
          description: Lista de IDs de marcas separada por comas